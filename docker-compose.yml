services:
    sr-ros2-core:
      container_name: sr-ros2
      image: ghcr.io/tud-cor-sr/sr-ros2-bundles:main
      build:
        context: .
        dockerfile: Dockerfile
        args:
          ELASTICA: false
          PYTORCH: false
          SOFA: false
          HSA: false
      environment:
        - DISPLAY
        - QT_X11_NO_MITSHM=1
      ports:
        # for communication through MODBUS / TCP with VTEM motion terminal
        - target: 502
          published: 502
          protocol: tcp
      privileged: true

    sr-ros2-core-elastica:
      container_name: sr-ros2-elastica
      image: ghcr.io/tud-cor-sr/sr-ros2-bundles:elastica
      build:
        args:
          ELASTICA: true

    sr-ros2-core-hsa:
      container_name: sr-ros2-hsa
      image: ghcr.io/tud-cor-sr/sr-ros2-bundles:hsa
      build:
        args:
          HSA: true

    sr-ros2-core-pytorch:
      container_name: sr-ros2-pytorch
      image: ghcr.io/tud-cor-sr/sr-ros2-bundles:pytorch
      build:
        args:
          PYTORCH: true

    sr-ros2-core-sofa:
      container_name: sr-ros2-sofa
      image: ghcr.io/tud-cor-sr/sr-ros2-bundles:sofa
      build:
        context: .
        args:
          SOFA: true
      environment:
        - QT_QPA_PLATFORM_PLUGIN_PATH=/usr/lib/x86_64-linux-gnu/qt5/plugins
        - QT_PLUGIN_PATH=/usr/lib/x86_64-linux-gnu/qt5/plugins

    sr-ros2-core-macos:
      extends: sr-ros2-core
      build:
        ssh: 
          - default
      environment: 
        - DISPLAY=host.docker.internal:0
      volumes:
          - type: bind
            source: /tmp/.X11-unix
            target: /tmp/.X11-unix

    sr-ros2-core-ubuntu:
      extends: sr-ros2-core
      build:
        network: host
        ssh: 
          - default
      environment:
        - NVIDIA_VISIBLE_DEVICES=all
        - NVIDIA_DRIVER_CAPABILITIES=compute,graphics,utility,display
      network_mode: host
      runtime: nvidia
      volumes:
          - type: bind
            source: /home
            target: /home
    sr-ros2-core-windows:
      extends: sr-ros2-core
      environment: 
        - DISPLAY=host.docker.internal:0
      # ports:
        # CYCLONE_DDS communication between Docker container and host system
        # https://github.com/eclipse-cyclonedds/cyclonedds/issues/677#issuecomment-768966870
        # - "192.168.200.169:7412:7412/udp"
        # - "192.168.200.169:7413:7413/udp"

    sr-ros2-hsa-ubuntu:
      extends: sr-ros2-core-ubuntu
      image: ghcr.io/tud-cor-sr/sr-ros2-bundles:hsa
      build:
        args:
          HSA: true
      devices:
        - /dev/ttyUSB0:/dev/ttyUSB0

    sr-ros2-hsa-macos:
      extends: sr-ros2-core-macos
      image: ghcr.io/tud-cor-sr/sr-ros2-bundles:hsa
      build:
        args:
          HSA: true
      devices:
        - /dev/tty.usbserial-*:/dev/ttyUSB*

    sr-ros2-hsa-windows:
      extends: sr-ros2-core-windows
      image: ghcr.io/tud-cor-sr/sr-ros2-bundles:hsa
      build:
        args:
          HSA: true

    sr-ros2-hsa-brain-control-ubuntu:
      extends: sr-ros2-hsa-ubuntu
      ports:
        # for communication with OpenViBE
        - target: 5678
          published: 5678
          protocol: tcp

    sr-ros2-hsa-brain-control-windows:
      extends: sr-ros2-hsa-windows
      ports:
        # for communication with OpenViBE
        - target: 5678
          published: 5678
          protocol: tcp
